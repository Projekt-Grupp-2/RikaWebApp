@page "/productlist" 
@using RikaWebApp.Models
@using static System.Net.WebRequestMethods
@using System.Net.Http.Json

@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Category Name</PageTitle> @* Titel hämtas från vald kategori *@

<section class="product-list-section">
    <div class="container">
        <h5 class="category-title">Clothes</h5> @* Titel hämtas från vald kategori *@
        <h6 class="error-message">@errorMessage</h6>
        <div class="product-list">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <h6>@errorMessage</h6>
            }
            else if (products == null)
            {
            <div><i class="fa-sharp fa-solid fa-spinner-third fa-spin"></i></div>
            }
            else
            {
                    @foreach (var product in products)
                    {
                    var link = $"/product-details/{product.Id}";
                        <a class="product-card" href="@link">
                            <img class="product-image" src="/images/products/@product.FirstImageUrl" />
                            <btn class="btn-round">
                                <i class="fa-regular fa-heart"></i>
                            </btn>
                            <div class="product-card-info">
                                <h5 class="product-name">@product.Name</h5>
                                <p class="short-desc">@product.ShortDescription</p>
                                
                                    @if (product.Prices.Discount != 0)
                                    {
                                        <div class="product-prices multiple-prices">
                                            <h5 class="discount">$@product.Prices.Discount.ToString("F2")</h5>
                                            <h5 class="original-price">$@product.Prices.Price1.ToString("F2")</h5>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="product-prices single-price">
                                            <h5 class ="price">$@product.Prices.Price1.ToString("F2")</h5>
                                        </div>
                                    }
                                
                            </div>
                        </a>
                    }
            }
        </div>
    </div>
</section>

@code {
    private ProductCardModel[]? products;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<ProductModel[]>("http://localhost:7111/api/GetProducts");

            if (result != null && result.Any())
            {
                products = result.Select(product => new ProductCardModel
                    {
                        Id = product.Id,
                        Name = product.Name,
                        ShortDescription = product.ShortDescription,
                        Images = product.Images.Select(image => new Image
                        {
                            ImageUrl = image.ImageUrl
                        }).ToList(),
                        
                        Prices = new Price
                        {
                            Price1 = product.Prices.FirstOrDefault()?.Price1 ?? 0,
                            Discount = product.Prices.FirstOrDefault()?.Discount ?? 0,
                            StartDate = product.Prices.FirstOrDefault()?.StartDate,
                            EndDate = product.Prices.FirstOrDefault()?.EndDate
                        }
                    }).ToArray();
            }
            else
            {
                errorMessage = "No products available in this category";
            }

        }
        catch (Exception ex)
        {
            errorMessage = "Failed to load products, try again later";
            Console.WriteLine(ex);
        }
    }
}