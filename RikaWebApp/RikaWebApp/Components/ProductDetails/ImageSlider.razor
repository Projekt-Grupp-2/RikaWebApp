@using System.Net.Http.Json
@using RikaWebApp.Models
@using static System.Net.WebRequestMethods

@inject HttpClient Http
@rendermode InteractiveServer
@attribute [StreamRendering]

@page "/imageslider"

@code {
    private ProductCardModel[]? productImages;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<ProductModel[]>("http://localhost:7111/api/GetProductById");

            if (result != null && result.Any())
            {
                productImages = result.Select(product => new ProductCardModel
                    {
                        Images = product.Images.Select(image => new Image
                        {
                            ImageUrl = image.ImageUrl
                        }).ToList(),
                    }).ToArray();
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Failed to load products, try again later";
            Console.WriteLine(ex);
        }
    }
    private List<string> images = new List<string>
    {
        "images/shirt2.webp",
        "images/shirt1.webp",
        "images/shirt3.webp"
    };

    private int currentIndex = 0;

    private void ChangeImage(int index)
    {
        currentIndex = index;
        StateHasChanged();
    }

    private void NextImage()
    {
        currentIndex = (currentIndex + 1) % images.Count;
        StateHasChanged();
    }

    private void PrevImage()
    {
        currentIndex = (currentIndex - 1 + images.Count) % images.Count;
        StateHasChanged();
    }
}

<div class="slideshow-container">
    @if (productImages != null) {
        @foreach (var image in productImages)
        {
            <img src="/images/products/@image.Images[currentIndex]" class="slide-image" alt="Slide Image" />
        }
    }
 
    <div class="dot-container">
        @for (int i = 0; i < images.Count; i++)
        {
            <span class="dot @(i == currentIndex ? "active" : "")" @onclick="() => ChangeImage(i)"></span>
        }
    </div>

    <button class="prev" @onclick="PrevImage">&#10094;</button>
    <button class="next" @onclick="NextImage">&#10095;</button>
</div>